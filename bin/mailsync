#!/usr/bin/env sh
# Sync mail and give notification if there is new mail.

# Run only if user logged in (prevent cron errors)
pgrep -u "$USER" >/dev/null || exit
# Run only if not already running in other instance
[ "$(pgrep -xf "sh /usr/bin/mailsync.*" | wc -l)" -eq 2 ] || exit

# Checks for internet connection and set notification script.
ping -q -c 1 1.1.1.1 > /dev/null || exit
command -v notify-send >/dev/null || echo "Note that \`libnotify\` or \`libnotify-send\` should be installed for pop-up mail notifications with this script."

export DISPLAY=:0.0

# Settings are different for MacOS (Darwin) systems.
if [ "$(uname)" = "Darwin" ]; then
    notify() { osascript -e "display notification \"$2 in $1\" with title \"You've got Mail\" subtitle \"Account: $account\"" && sleep 2 ;}
else
    notify() { notify-send "mutt-wizard" "ðŸ“¬ $2 new mail(s) in \`$1\` account." ;}
fi

# Check account for new mail. Notify if there is new content.
syncandnotify() {
    acc="$(echo "$account" | sed "s/.*\///")"
    mbsync "$acc"
    new=$(find "$HOME/.local/share/mail/$acc/INBOX/new/" "$HOME/.local/share/mail/$acc/Inbox/new/" "$HOME/.local/share/mail/$acc/inbox/new/" -type f -newer "$HOME/.config/mutt/.mailsynclastrun" 2> /dev/null)
    newcount=$(echo "$new" | sed '/^\s*$/d' | wc -l)
    if [ "$newcount" -gt "0" ]; then
        notify "$acc" "$newcount" &
        if [ "$preview" = true ]; then
            for file in $new; do
                # Extract subject and sender from mail.
                from=$(awk '/^From: / && ++n ==1,/^\<.*\>:/' "$file" | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)' | awk '{ $1=""; if (NF>=3)$NF=""; print $0 }' | sed 's/^[[:blank:]]*[\"'\''\<]*//;s/[\"'\''\>]*[[:blank:]]*$//')
                subject=$(awk '/^Subject: / && ++n == 1,/^\<.*\>: / && ++i == 2' "$file" | head -n-1 | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)' | sed 's/^Subject: //' | sed 's/^{[[:blank:]]*[\"'\''\<]*//;s/[\"'\''\>]*[[:blank:]]*$//' | tr -d '\n')
                notify-send "ðŸ“§$from:" "$subject" &
            done
        fi
    fi
}

echo " ðŸ”ƒ" > /tmp/imapsyncicon_"$USER"
pkill -RTMIN+12 i3blocks >/dev/null 2>&1

# Parse arguments
accounts=""
while [ $# -gt 0 ]; do
    case "$1" in
        -p|--preview)
            preview=true
            shift ;;
        *)
            accounts="${accounts:+${accounts} }$1"
            shift ;;
    esac
done

# If no accounts are passed sync all accounts
[ -z "$accounts" ] && accounts="$(ls "$HOME/.local/share/mail")"
# Parallelize multiple accounts
for account in $accounts
do
    syncandnotify &
done

wait
rm -f /tmp/imapsyncicon_"$USER"
pkill -RTMIN+12 i3blocks >/dev/null 2>&1

notmuch new 2>/dev/null

#Create a touch file that indicates the time of the last run of mailsync
touch "$HOME/.config/mutt/.mailsynclastrun"
