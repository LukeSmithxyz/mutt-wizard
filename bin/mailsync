#!/usr/bin/env sh
# Sync mail and give notification if there is new mail.

# Run only if user logged in (prevent cron errors)
pgrep -u "$USER" >/dev/null || exit

# Checks for internet connection and set notification script.
ping -q -c 1 1.1.1.1 > /dev/null || exit
command -v notify-send >/dev/null || echo "Note that \`libnotify\` or \`libnotify-send\` should be installed for pop-up mail notifications with this script."

export DISPLAY=:0.0

# Settings are different for MacOS (Darwin) systems.
if [ "$(uname)" = "Darwin" ]; then
	notify() { osascript -e "display notification \"$2 in $1\" with title \"You've got Mail\" subtitle \"Account: $account\"" && sleep 2 ;}
else
	notify() { notify-send "mutt-wizard" "ðŸ“¬ $2 new mail(s) in \`$1\` account." ;}
fi

echo " ðŸ”ƒ" > /tmp/imapsyncicon_$USER
pkill -RTMIN+12 i3blocks >/dev/null 2>&1

# Run mbsync. You can feed this script different settings.
if [ $# -eq 0 ]; then
	mbsync -a
else
	mbsync "$@"
fi

rm -f /tmp/imapsyncicon_$USER
pkill -RTMIN+12 i3blocks >/dev/null 2>&1

# Check all accounts/mailboxes for new mail. Notify if there is new content.
for account in "$HOME/.local/share/mail/"*
do
	acc="$(echo "$account" | sed "s/.*\///")"
	folders="$account/INBOX/new/"
	[ "$(uname)" != "Darwin" ] && folders="$folders $account/Inbox/new/ $account/inbox/new/"
	newcount=$(find $folders -type f -newer "$HOME/.config/mutt/.mailsynclastrun" 2>/dev/null | wc -l)
	[ "$newcount" -gt "0" ] && notify "$acc" "$newcount" &
done
notmuch new 2>/dev/null

#Create a touch file that indicates the time of the last run of mailsync
touch "$HOME/.config/mutt/.mailsynclastrun"
